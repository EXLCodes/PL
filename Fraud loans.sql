-- Pre-agggregate data from Tableau Report
create or replace 
table tdm_sandbox.sandbox.asd_earlyPerformance as
(
with
OLN
as
(
    select af.ID
      , di.UW_REQUEST:application:isLightboxApplicant::boolean                                                                        as ck_lightbox
              , di.UW_REQUEST:application:isDirectMail::boolean                                                                               as is_dm
      , CASE
           when ck_lightbox = 'TRUE' then 1
           when is_dm = 'TRUE' then 1
           else 0 end as DM_CKLB_FLAG
      FROM TDM_RISK_MGMT_HUB.MODELED.APPLICATIONS_FILE af
                LEFT JOIN TDM_UNDERWRITING.CLEANSED.DIODES di on af.ID = di.TARGET_ID
                            and di.TARGET_TYPE = 'APP' and di.RESULT_TYPE = 'OFFICIAL'
        where af.id > 0 and af.APPLICATION_TYPE = 'PL' and af.DATE_FUND >= '2022-01-01'
              qualify row_number() over (partition by af.ID order by di.DATE_OF_UNDERWRITING desc) = 1
),
cf
as
(
    select id
            , max(case when activity_id = '1309' then 1 else 0 end) as conf_fraud
    from TDM_RISK_MGMT_HUB.MODELED.applications_file af
    left join TDM_RISK_MGMT_HUB.MODELED.application_activity_facts aaf on af.dw_application_id = aaf.application_id
    left join TDM_RISK_MGMT_HUB.MODELED.dates st_dt on aaf.active_date_id = st_dt.date_id
    where APPLICATION_TYPE = 'PL' and af.DATE_DOC_UPLOAD >= '2022-09-01'
    group by 1
),
main
as
(
    select perf.*
        ,cf.conf_fraud 
    from TDM_RISK_MGMT_HUB.SUMMARIZED.PL_PERFORMANCE_DASHBOARD perf
    left join cf on perf.id = cf.id
),
base
as
(
    select DATA_REFRESH_DATE as "data_refresh_date",
        main.ID as "id",
        CITIZENSHIP as "citizenship",
        PL_FUNDS_USE as "pl_funds_use",
        APPLICANT_ID as "applicant_id",
        --DW_APPLICATION_ID as "dw_application_id",
        LBM_ID as "lbm_id",
        LOAN_ID as "loan_id",
        OTHER_APPLICANT_ID as "other_applicant_id",
        ACCRUED_INT as "accrued_int",
        AGENCY_FLAG as "agency_flag",
        APP_TYPE as "app_type",
        APPLICATION_TYPE as "application_type",
        ASOF_DATE as "asof_date",
        BK_DATE as "bk_date",
        BYPASS_FLAG as "bypass_flag",
        CHANNEL_CLEAN as "channel_clean",
        CHARGE_OFF_AMOUNT as "charge_off_amount",
        CHARGE_OFF_DATE as "charge_off_date",
        CHARGE_OFF_PRIN as "charge_off_prin",
        COBORROWER_INDICATOR as "coborrower_indicator",
        CONFIRMED_FRAUD as "confirmed_fraud",
        CONSOLIDATED_CHANNEL as "consolidated_channel",
        CORE_TIER_FLAG as "core_tier_flag",
        CREDIT_POLICY_VERSION as "credit_policy_version",
        CUR_INT_RATE as "cur_int_rate",
        CURRENT_ACTIVITY as "current_activity",
        CURRENT_OWNER as "current_owner",
        CURRENT_OWNER_NAME as "current_owner_name",
        CURRENT_OWNER_TYPE as "current_owner_type",
        CURRENT_PRIN as "current_prin",
        DAYS_PAST_DUE as "days_past_due",
        DIRECT_PAY_IND as "direct_pay_ind",
        DIRECT_PAY_VAL as "direct_pay_val",
        DPD_STATUS as "dpd_status",
        EFFECTIVE_DATE as "effective_date",
        EMPLOYMENT_TYPE as "employment_type",
        F_DATE as "f_date",
        FCF_V2 as "fcf_v2",
        FICO_SCORE as "fico_score",
        FORBEARANCE_TYPE as "forbearance_type",
        FREE_CASH_FLOW as "free_cash_flow",
        G_PROGRAM as "g_program",
        GE_BYPASS_IND as "ge_bypass_ind",
        GEN3_IND as "gen3_ind",
        GROSS_INCOME as "gross_income",
        HOUSING_STATUS as "housing_status",
        IMPACT_ATTR_AFFILIATE_REFERRER as "impact_attr_affiliate_referrer",
        INCOME_MODEL_FLAG as "income_model_flag",
        INITIAL_TERM as "initial_term",
        INTEREST_RATE_TYPE as "interest_rate_type",
        IR_FLAG as "ir_flag",
        IS_PL_REFI_APP as "is_pl_refi_app",
        LEM_VOI_FLAG as "lem_voi_flag",
        LIGHTBOX_FLAG as "lightbox_flag",
        LOAN_STATUS as "loan_status",
        LOAN_TYPE as "loan_type",
        MED_DENT_IR_FLAG as "med_dent_ir_flag",
        MONTH_START_PRIN as "month_start_prin",
        NOVA_FLAG as "nova_flag",
        ORIG_GROSS_INT_RATE as "orig_gross_int_rate",
        ORIG_STATE as "orig_state",
        ORIGINAL_PRIN as "original_prin",
        ORIGINATION_DATE as "origination_date",
        PAYSTUB_OCR_FLAG as "paystub_ocr_flag",
        PIF_DATE as "pif_date",
        POLICY_VERSION as "policy_version",
        PREV_DPD_STATUS as "prev_dpd_status",
        PRODUCT_CATEGORY as "product_category",
        QUOVO_FLAG as "quovo_flag",
        REAL_EXCESS_CASH_FLOW as "real_excess_cash_flow",
        REASON as "reason",
        RECOVERIES_IN_PERIOD as "recoveries_in_period",
        RECOVERIES_TO_DATE as "recoveries_to_date",
        REPAY_BEGIN_DATE as "repay_begin_date",
        REPAY_TERM_RMN as "repay_term_rmn",
        SEASONING_FPD as "seasoning_fpd",
        SEASONING_ORIG as "seasoning_orig",
        SOFIB_FLAG as "sofib_flag",
        SOFIB_IND as "sofib_ind",
        TIER as "tier",
        TIER_PLUS_SUB_TIER as "tier_plus_sub_tier",
        TOF_MODEL_FLAG as "tof_model_flag",
        TOT_PMT_SCHD as "tot_pmt_schd",
        TRANSFERSALE_AMOUNT as "transfersale_amount",
        TRANSFERSALE_FLAG as "transfersale_flag",
        TWN_FLAG as "twn_flag",
        UG_PROGRAM as "ug_program",
        UI_PAGAYA_IND as "ui_pagaya_ind",
        VOE_FLAG as "voe_flag",
        conf_fraud as "conf_fraud",
        case when fl.id is not null then 1 else 0 end as Fraud_Loan,
        case when OLN.DM_CKLB_FLAG = 1 then 1 else 0 end as OLNFlag
    from main
    left join (select id from tdm_sandbox.sandbox.asd_Fraud_loans group by 1) as fl on main.id = fl.id --and fraud_loans.version = 1
    left join OLN on main.ID = OLN.ID
    where 1=1
    and ORIGINATION_DATE between '2022-09-01' and '2023-02-28' -- Modify dates
)
select * from base

);

-- DPD30+ by Vintage
select left("origination_date",7) as VINTAGE
        ,sum("original_prin") as ORIGINAL_PRIN
        ,sum(case when "days_past_due" >= 30 then "current_prin" else 0 end) as DPD30_PRIN
        ,sum(case when "charge_off_date" <= "asof_date" then -"charge_off_prin" else 0 end) as CO_AMT
        ,DPD30_PRIN + CO_AMT as DPD30_PRIN_CO_AMT
        ,round((DPD30_PRIN_CO_AMT/ORIGINAL_PRIN)*100,2) as DPD30_CO_RATE
        
    from tdm_sandbox.sandbox.asd_earlyPerformance main
    where "seasoning_orig" = 3
    and "confirmed_fraud" = 0
    and "conf_fraud" = 0
    and Fraud_Loan = 0  -- Loans from list (This is the filter you should remove (Column B in Google sheets doc) to keep fraud loans and then keep (Column C) to see the impact of excluding fraud loans
    and "tier" in (1,2,3,4,5,6,7,8)   
    group by VINTAGE
    order by VINTAGE
;

/*******************************************************************************/

--Insert new fraud loans

create or replace table tdm_sandbox.sandbox.asd_Fraud_loans(ID int, Version int);

insert into tdm_sandbox.sandbox.asd_Fraud_loans(ID, Version)
values
 (19772946,0)
,(19891323,0)
,(20510976,0)
,(20597797,0)
,(20618004,0)
,(20618233,0)
,(20621607,0)
,(20622628,0)
,(20622735,0)
,(20641894,0)
,(20651365,0)
,(20653267,0)
,(20647588,0)
,(20649898,0)
,(20644211,0)
,(20661976,0)
,(20667593,0)
,(20698051,0)
,(20687068,0)
,(20685623,0)
,(20691313,0)
,(20694204,0)
,(20695465,0)
,(20694580,0)
,(20689277,0)
,(20686825,0)
,(20688679,0)
,(20714842,0)
,(20712395,0)
,(20708012,0)
,(20714905,0)
,(20736891,0)
,(20738617,0)
,(20724969,0)
,(20734298,0)
,(20731881,0)
,(20726192,0)
,(20757151,0)
,(20753995,0)
,(20745673,0)
,(20754399,0)
,(20754385,0)
,(20751215,0)
,(20744496,0)
,(20753852,0)
,(20756189,0)
,(20743737,0)
,(20744084,0)
,(20766318,0)
,(20759419,0)
,(20772239,0)
,(20770683,0)
,(20768577,0)
,(20768285,0)
,(20718385,0)
,(20760552,0)
,(20767531,0)
,(20770420,0)
,(20775555,0)
,(20774253,0)
,(20776501,0)
,(20773306,0)
,(20778662,0)
,(20779034,0)
,(20781236,0)
,(20780095,0)
,(20781252,0)
,(20773937,0)
,(20794563,0)
,(20797098,0)
,(20788781,0)
,(20788693,0)
,(20801212,0)
,(20797416,0)
,(20811280,0)
,(20802666,0)
,(20809911,0)
,(20810532,0)
,(20798986,0)
,(20798998,0)
,(20829596,0)
,(20817047,0)
,(20818028,0)
,(20825722,0)
,(20827130,0)
,(20814945,0)
,(20822840,0)
,(20819244,0)
,(20819136,0)
,(20818665,0)
,(20814980,0)
,(20824655,0)
,(20814872,0)
,(20828022,0)
,(20814710,0)
,(20840599,0)
,(20840378,0)
,(20835662,0)
,(20830587,0)
,(20843908,0)
,(20843142,0)
,(20832062,0)
,(20831378,0)
,(20830197,0)
,(20836452,0)
,(20841541,0)
,(20833701,0)
,(20835240,0)
,(20834406,0)
,(20829888,0)
,(20842471,0)
,(20860578,0)
,(20856848,0)
,(20859815,0)
,(20847609,0)
,(20867287,0)
,(20846861,0)
,(20865916,0)
,(20859753,0)
,(20858150,0)
,(20859450,0)
,(20845953,0)
,(20850502,0)
,(20866284,0)
,(20847961,0)
,(20869452,0)
,(20847575,0)
,(20845221,0)
,(20864993,0)
,(20857385,0)
,(20863778,0)
,(20863803,0)
,(20871351,0)
,(20879308,0)
,(20871050,0)
,(20870479,0)
,(20871733,0)
,(20883179,0)
,(20880438,0)
,(20879928,0)
,(20875256,0)
,(20875792,0)
,(20876895,0)
,(20874242,0)
,(20871851,0)
,(20881470,0)
,(20882860,0)
,(20882035,0)
,(20885544,0)
,(20889126,0)
,(20887485,0)
,(20896492,0)
,(20904477,0)
,(20899332,0)
,(20901994,0)
,(20904943,0)
,(20902812,0)
,(20900957,0)
,(20917036,0)
,(20906333,0)
,(20907608,0)
,(20914692,0)
,(20918615,0)
,(20915480,0)
,(20908075,0)
,(20915370,0)
,(20916756,0)
,(20921601,0)
,(20922439,0)
,(20926984,0)
,(20931577,0)
,(20933407,0)
,(20928381,0)
,(20923623,0)
,(20921649,0)
,(20945101,0)
,(20947047,0)
,(20949592,0)
,(20944982,0)
,(20945835,0)
,(20941124,0)
,(20955747,0)
,(20959820,0)
,(20953699,0)
,(20957521,0)
,(20960521,0)
,(20961160,0)
,(20953194,0)
,(20962072,0)
,(20960783,0)
,(20962911,0)
,(20967831,0)
,(20967293,0)
,(20969362,0)
,(20968867,0)
,(20973880,0)
,(20965572,0)
,(20981312,0)
,(20977964,0)
,(20986673,0)
,(20982657,0)
,(20990672,0)
,(20990041,0)
,(20989103,0)
,(20988895,0)
,(21006152,0)
,(21001455,0)
,(21006418,0)
,(21001092,0)
,(21002186,0)
,(21025661,0)
,(21036530,0)
,(21035697,0)
,(21039687,0)
,(21036703,0)
,(21038035,0)
,(21023372,0)
,(21023279,0)
,(21025293,0)
,(21025452,0)
,(21050259,0)
,(21053836,0)
,(21047423,0)
,(21057877,0)
,(21053213,0)
,(21051344,0)
,(21061952,0)
,(21048946,0)
,(21056854,0)
,(21068266,0)
,(21071505,0)
,(21064743,0)
,(21073937,0)
,(21068878,0)
,(21088113,0)
,(21082743,0)
,(21090173,0)
,(21097621,0)
,(21110497,0)
,(21108094,0)
,(21113915,0)
,(21113297,0)
,(21113345,0)
,(21119120,0)
,(21120170,0)
,(21119980,0)
,(21123264,0)
,(21115076,0)
,(21116449,0)
,(21125464,0)
,(21132882,0)
,(21138583,0)
,(21139019,0)
,(21137245,0)
,(21136465,0)
,(21136000,0)
,(21150417,0)
,(21142605,0)
,(21154953,0)
,(21172864,0)
,(21158587,0)
,(21168150,0)
,(21190929,0)
,(21182700,0)
,(21183138,0)
,(21183758,0)
,(21197005,0)
,(21187311,0)
,(21198563,0)
,(21188357,0)
,(21185681,0)
,(21206492,0)
,(21204314,0)
,(21204550,0)
,(21211223,0)
,(21213519,0)
,(21211108,0)
,(21207818,0)
,(21204941,0)
,(21202486,0)
,(21234362,0)
,(21227161,0)
,(21218780,0)
,(21218851,0)
,(21227672,0)
,(21218430,0)
,(21219588,0)
,(21239104,0)
,(21242069,0)
,(21262761,0)
,(21239907,0)
,(21245308,0)
,(21247270,0)
,(21240976,0)
,(21242284,0)
,(21246167,0)
,(21246915,0)
,(21251618,0)
,(21250204,0)
,(21248765,0)
,(21248236,0)
,(21240940,0)
,(21263837,0)
,(21256656,0)
,(21246496,0)
,(21251445,0)
,(21262326,0)
,(21259911,0)
,(21255349,0)
,(21275000,0)
,(21286976,0)
,(21270306,0)
,(21270807,0)
,(21278038,0)
,(21283476,0)
,(21285088,0)
,(21276379,0)
,(21268579,0)
,(21269883,0)
,(21268053,0)
,(21279527,0)
,(21280240,0)
,(21268601,0)
,(21281853,0)
,(21303023,0)
,(21299067,0)
,(21305983,0)
,(21289221,0)
,(21306780,0)
,(21291611,0)
,(21304288,0)
,(21303261,0)
,(21296856,0)
,(21290676,0)
,(21305295,0)
,(21288970,0)
,(21300644,0)
,(21289795,0)
,(21290016,0)
,(21316585,0)
,(21318380,0)
,(21319075,0)
,(21315330,0)
,(21311754,0)
,(21308522,0)
,(21318602,0)
,(21310344,0)
,(21314987,0)
,(21309425,0)
,(21327347,0)
,(21312711,0)
,(21340916,0)
,(21328831,0)
,(21329759,0)
,(21342294,0)
,(21337358,0)
,(21328792,0)
,(21331987,0)
,(21335901,0)
,(21340951,0)
,(21330205,0)
,(21341177,0)
,(21328622,0)
,(21344535,0)
,(21348829,0)
,(21350492,0)
,(21359382,0)
,(21347331,0)
,(21362811,0)
,(21369568,0)
,(21367341,0)
,(21364320,0)
,(21369516,0)
,(21391968,0)
,(21376387,0)
,(21379865,0)
,(21380328,0)
,(21388522,0)
,(21375170,0)
,(21377306,0)
,(21390238,0)
,(21376739,0)
,(21392223,0)
,(21389644,0)
,(21382529,0)
,(21376279,0)
,(21389983,0)
,(21389982,0)
,(21376562,0)
,(21396482,0)
,(21394549,0)
,(21407863,0)
,(21400680,0)
,(21406380,0)
,(21402586,0)
,(21394111,0)
,(21395515,0)
,(21399185,0)
,(21399914,0)
,(21409251,0)
,(21411047,0)
,(21395133,0)
,(21408069,0)
,(21401484,0)
,(21393920,0)
,(21402340,0)
,(21431906,0)
,(21429127,0)
,(21416287,0)
,(21413384,0)
,(21423920,0)
,(21415442,0)
,(21417707,0)
,(21431425,0)
,(21426154,0)
,(21416037,0)
,(21414720,0)
,(21415624,0)
,(21425877,0)
,(21431390,0)
,(21416309,0)
,(21420685,0)
,(21417562,0)
,(21446989,0)
,(21445796,0)
,(21449464,0)
,(21450802,0)
,(21454690,0)
,(21454338,0)
,(21434031,0)
,(21447664,0)
,(21443554,0)
,(21444761,0)
,(21450586,0)
,(21450642,0)
,(21447745,0)
,(21453875,0)
,(21435490,0)
,(21440619,0)
,(21439656,0)
,(21452043,0)
,(21436361,0)
,(21439548,0)
,(21448159,0)
,(21436110,0)
,(21436298,0)
,(21452885,0)
,(21445118,0)
,(21447758,0)
,(21455019,0)
,(21471442,0)
,(21471992,0)
,(21460572,0)
,(21464199,0)
,(21467923,0)
,(21458599,0)
,(21457765,0)
,(21466907,0)
,(21462465,0)
,(21457679,0)
,(21471866,0)
,(21457186,0)
,(21468936,0)
,(21466281,0)
,(21462231,0)
,(21457972,0)
,(21462038,0)
,(21470912,0)
,(21459099,0)
,(21489679,0)
,(21491778,0)
,(21477640,0)
,(21478464,0)
,(21489883,0)
,(21478575,0)
,(21479346,0)
,(21493851,0)
,(21492033,0)
,(21492956,0)
,(21495643,0)
,(21493750,0)
,(21504073,0)
,(21494105,0)
,(21501156,0)
,(21503658,0)
,(21493677,0)
,(21493874,0)
,(21513062,0)
,(21509051,0)
,(21508889,0)
,(21524771,0)
,(21514972,0)
,(21527244,0)
,(21527319,0)
,(21516542,0)
,(21527563,0)
,(21511222,0)
,(21524888,0)
,(21509212,0)
,(21528409,0)
,(21521636,0)
,(21527852,0)
,(21524399,0)
,(21510642,0)
,(21520496,0)
,(21520777,0)
,(21549182,0)
,(21548356,0)
,(21534515,0)
,(21533336,0)
,(21547653,0)
,(21541934,0)
,(21532052,0)
,(21547868,0)
,(21542488,0)
,(21549197,0)
,(21533844,0)
,(21547453,0)
,(21552497,0)
,(21547564,0)
,(21532857,0)
,(21551546,0)
,(21549243,0)
,(21540512,0)
,(21547027,0)
,(21551353,0)
,(21545705,0)
,(21537312,0)
,(21541294,0)
,(21534224,0)
,(21550663,0)
,(21534355,0)
,(21533898,0)
,(21554583,0)
,(21565069,0)
,(21577476,0)
,(21574589,0)
,(21560735,0)
,(21570508,0)
,(21577200,0)
,(21569674,0)
,(21557646,0)
,(21564596,0)
,(21568717,0)
,(21558052,0)
,(21555622,0)
,(21572154,0)
,(21556410,0)
,(21564012,0)
,(21563947,0)
,(21577556,0)
,(21578307,0)
,(21562728,0)
,(21565121,0)
,(21568742,0)
,(21570525,0)
,(21560992,0)
,(21560530,0)
,(21578252,0)
,(21570769,0)
,(21558004,0)
,(21574062,0)
,(21566800,0)
,(21558496,0)
,(21570092,0)
,(21560855,0)
,(21570430,0)
,(21571486,0)
,(21563593,0)
,(21558481,0)
,(21559684,0)
,(21576228,0)
,(21558388,0)
,(21601655,0)
,(21596832,0)
,(21583882,0)
,(21591954,0)
,(21599400,0)
,(21592692,0)
,(21580676,0)
,(21597715,0)
,(21592563,0)
,(21604515,0)
,(21603888,0)
,(21590591,0)
,(21578806,0)
,(21582034,0)
,(21598729,0)
,(21581679,0)
,(21579004,0)
,(21580068,0)
,(21581573,0)
,(21601926,0)
,(21582720,0)
,(21582092,0)
,(21583119,0)
,(21589213,0)
,(21593090,0)
,(21596516,0)
,(21589928,0)
,(21581537,0)
,(21595730,0)
,(21632631,0)
,(21636103,0)
,(21659793,0)
,(20764546,1)
,(20937434,1)
,(21078678,1)
,(21085547,1)
,(21111609,1)
,(21357970,1)
,(21625582,1)
,(21545710,1)
,(21580599,1)


insert into tdm_sandbox.sandbox.asd_Fraud_loans(ID, Version)
values
(20568014,2)
,(20654283,2)
,(20674980,2)
,(20778995,2)
,(20800444,2)
,(20817722,2)
,(20881007,2)
,(20882146,2)
,(20917028,2)
,(20936876,2)
,(20944008,2)
,(20959928,2)
;


insert into tdm_sandbox.sandbox.asd_Fraud_loans(ID, Version)
select id, 3
from tdm_risk_mgmt_hub.modeled.applications_file
where date_fund >= '2022-12-01'
and id not in (Select id from tdm_sandbox.sandbox.asd_Fraud_loans)
--date_fund >= '2022-11-01'
and applicant_id in
(26007796
,26335970
,23305245
,26325533
,24936688
,26529183
,3831829
,25826175
,25622526
,26700846
,24749909
,25801156
,25717176
,26977716
,26797785
,24889061
,26885750
,1122808
,23971384
,25248731
,26808987
,26698571
,23393331
,25761408
,25463755
,22756020
,27036909
,27034839
,20257657
,26436088
,24491524
,22830337
,27081195
,26048147
,27034400
,23305245
,27102295
,27112714
,26640597
,26875095
,27141994
,26687532
,27099106
,27103863
,27154668
,27145356
,27083337
,27197921
,27145328
,27116046
,27063870
,27062646
,27053763
,27210947
,27094977
,26933008
,27131291
,27085570
,27086894
,27159575
,27174279
,26973353
,27160755
,27061603
,27147863
,44911
,27149006
,27167798
,27212349
,27159051
,27194514
,27193251
,27210150
,27218780
,27122926
,27142580
,26206113
,27223211
,27256943
,25208678
,26993557
,26531301
,24833425
,27262844
,27265275
,27111005
,27273807
,26795294
,27151689
,24885405
,27248472
,27166665
,26318346
,27034851
,23822508
,26481790
,26262217
,27294654
,27262406
,27273215
,27304199
,12752305
,27319860
,27071788
,27292111
,27286743)

;

insert into tdm_sandbox.sandbox.asd_Fraud_loans(ID, Version)
values
(20618131,4)
,(20837685,4)
,(20912412,4)
,(20674980,4)
,(20783239,4)
,(20800444,4)
,(20808408,4)
,(20817722,4)
,(20859822,4)
,(20881007,4)
,(20885881,4)
,(20929668,4)
,(20959928,4)
,(21057231,4)
,(20716577,4)
;

insert into tdm_sandbox.sandbox.asd_Fraud_loans(ID, Version)
values
(21077138,5),
(21084178,5),
(21095131,5),
(21102012,5),
(21102675,5),
(21126335,5),
(21173109,5),
(21184561,5),
(21264168,5),
(21264942,5),
(21308866,5),
(21310910,5),
(21323420,5),
(21418447,5),
(21422090,5),
(21426660,5),
(21444484,5),
(21455375,5),
(21458334,5),
(21492792,5),
(21537341,5),
(21544568,5),
(21551746,5),
(21553887,5),
(21559033,5),
(21563604,5),
(21571594,5),
(21575868,5),
(21581173,5),
(21588540,5),
(21590583,5);

--642,5
select count(*),count(*)-count(distinct id),max(version) from tdm_sandbox.sandbox.asd_Fraud_loans;